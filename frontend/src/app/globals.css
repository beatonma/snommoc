@import "tailwindcss";

:root {
  /** Theme colors */
  --_black_: rgb(9, 9, 11);
  --_white_: rgb(250, 250, 250);

  --_light_background: rgb(228, 228, 231);
  --_dark_background: rgb(24, 24, 27);

  --_light_on_background: var(--_black_);
  --_dark_on_background: white;

  --_light_surface: var(--_white_);
  --_dark_surface: rgb(39, 39, 42);

  --_light_surface_alt: rgb(255 255 255);
  --_dark_surface_alt: rgb(82, 82, 92);

  --_light_on_surface: var(--_black_);
  --_dark_on_surface: var(--_white_);

  --_light_primary: rgb(51, 136, 85);
  --_dark_primary: rgb(66, 172, 108);

  --_light_on_primary: var(--_white_);
  --_dark_on_primary: var(--_white_);

  --_light_accent: rgb(206, 218, 245);
  --_dark_accent: rgb(206, 218, 245);

  --_light_on_accent: rgb(40, 71, 119);
  --_dark_on_accent: rgb(40, 71, 119);

  --_light_hover-mixer: var(--_black_);
  --_dark_hover-mixer: var(--_white_);
}

::selection {
  background-color: color-mix(in srgb, var(--surface), var(--primary));
  color: var(--on_primary);
}

@media (prefers-color-scheme: light) {
  :root {
    --background: var(--_light_background);
    --on_background: var(--_light_on_background);
    --surface: var(--_light_surface);
    --surface_alt: var(--_light_surface_alt);
    --on_surface: var(--_light_on_surface);
    --primary: var(--_light_primary);
    --on_primary: var(--_light_on_primary);
    --accent: var(--_light_accent);
    --on_accent: var(--_light_on_accent);
    --hover-mixer: var(--_light_hover-mixer);
  }
}
[data-theme="light"] {
  --background: var(--_light_background);
  --on_background: var(--_light_on_background);
  --surface: var(--_light_surface);
  --surface_alt: var(--_light_surface_alt);
  --on_surface: var(--_light_on_surface);
  --primary: var(--_light_primary);
  --on_primary: var(--_light_on_primary);
  --accent: var(--_light_accent);
  --on_accent: var(--_light_on_accent);
  --hover-mixer: var(--_light_hover-mixer);
}

@media (prefers-color-scheme: dark) or (prefers-color-scheme: no-preference) {
  :root {
    --background: var(--_dark_background);
    --on_background: var(--_dark_on_background);
    --surface: var(--_dark_surface);
    --surface_alt: var(--_dark_surface_alt);
    --on_surface: var(--_dark_on_surface);
    --primary: var(--_dark_primary);
    --on_primary: var(--_dark_on_primary);
    --accent: var(--_dark_accent);
    --on_accent: var(--_dark_on_accent);
    --hover-mixer: var(--_dark_hover-mixer);
  }
}
[data-theme="dark"] {
  --background: var(--_dark_background);
  --on_background: var(--_dark_on_background);
  --surface: var(--_dark_surface);
  --surface_alt: var(--_dark_surface_alt);
  --on_surface: var(--_dark_on_surface);
  --primary: var(--_dark_primary);
  --on_primary: var(--_dark_on_primary);
  --accent: var(--_dark_accent);
  --on_accent: var(--_dark_on_accent);
  --hover-mixer: var(--_dark_hover-mixer);
}

@theme inline {
  --color-*: initial; /* Disable tailwind color definitions. */

  --color-black: var(--_black_);
  --color-white: var(--_white_);
  --color-background: var(--background);
  --color-on_background: var(--on_background);
  --color-surface: var(--surface);
  --color-on_surface: var(--on_surface);
  --color-primary: var(--primary);
  --color-on_primary: var(--on_primary);
  --color-accent: var(--accent);
  --color-on_accent: var(--on_accent);

  --color-primary-hover: color-mix(
    in srgb,
    var(--primary) 80%,
    var(--hover-mixer)
  );
  --color-surface-hover: color-mix(in srgb, var(--surface) 95%, currentColor);
  --color-primary-background: color-mix(
    in srgb,
    var(--primary),
    var(--background)
  );
  --color-hover: color-mix(in srgb, currentColor 5%, transparent);
}

@theme {
  --breakpoint-md: 863px;

  --color-house-commons: rgb(0 110 70);
  --color-house-commons-dark: #005434;
  --color-house-commons-darker: #004229;
  --color-house-on_commons: #fff;

  --color-house-lords: rgb(181 9 56);
  --color-house-lords-dark: #540016;
  --color-house-lords-darker: #420012;
  --color-house-on_lords: #fff;

  --list-style-type-square: square;

  --transition-duration: 220ms;

  --spacing-em: 1em;
  --spacing-edge: 8px;
  --spacing-edge-sm: 16px;

  --spacing-listitem_card: min(100%, 400px);
}

@layer base {
  img {
    @apply object-cover;
  }

  address {
    @apply not-italic;
  }

  h1 {
    @apply text-4xl;
  }
  h2 {
    @apply text-3xl;
  }
  h3 {
    @apply text-2xl;
  }
  h4 {
    @apply text-xl;
  }

  section {
    @apply flex flex-col gap-y-2;
    > h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      @apply leading-relaxed;
    }

    &:not(:last-child) {
      @apply mb-12;
    }

    section:not(:last-child) {
      @apply mb-8;
    }
  }

  ul {
    @apply list-inside list-disc;
  }

  input,
  select {
    --surface: var(--surface_alt);
    @apply bg-surface text-on_surface rounded-sm px-2 py-1;
  }

  table {
    @apply card w-fit sm:rounded-lg;

    thead th:not(:empty) {
      @apply border-primary/25 border-b-[0.1px] py-2;
    }
    tfoot {
      @apply border-primary/25 border-t-[0.1px] py-2;
    }

    tbody th {
      @apply border-primary/25 border-r-[0.1px] text-right;
    }

    tbody tr {
      @apply transition-colors;
      &:hover {
        @apply bg-hover;
      }
    }

    th,
    td {
      @apply px-4 py-1.5 text-left;
    }
  }
}

@layer components {
  .overflow-x-auto {
    @media (pointer: coarse) {
      scrollbar-width: none;
    }
    @media (pointer: fine) {
      scrollbar-width: thin;
    }
  }

  .px-edge {
    .px-edge {
      /* Ensure that WindowInsets padding is not applied more than once in a node tree. */
      --spacing-edge: 0;
    }
  }

  .px-edge-sm {
    .px-edge-sm {
      /* Ensure that WindowInsets padding is not applied more than once in a node tree. */
      --spacing-edge-sm: 0;
    }
  }
}

@layer components {
  .loading {
    @apply relative flex size-[64px] items-center justify-center self-center justify-self-center text-[64px];

    > * {
      animation-duration: 1000ms;
      animation-iteration-count: infinite;
      animation-fill-mode: both;
    }

    > *:first-child {
      @apply absolute justify-self-center fill-current;
    }

    > *:not(:first-child) {
      @apply fill-primary z-10 inline-block shrink-0;
    }

    & > :nth-child(2) {
      animation-name: loading-first;
      animation-timing-function: ease-in-out;
    }

    & > :last-child {
      animation-name: loading-last;
      animation-timing-function: ease-in-out;
    }
  }

  @keyframes loading-first {
    0%,
    40% {
      opacity: 0;
    }
    100% {
      opacity: 1;
      scale: 1;
      translate: 50%;
    }
  }
  @keyframes loading-last {
    0% {
      translate: -50%;
    }
    70%,
    100% {
      opacity: 0;
    }
  }
}

@layer components {
  .readable {
    @apply w-full max-w-[800px];
  }

  .text-reduced {
    /**
   * Reduce emphasis by fading the currentColor.
   */
    color: color-mix(in srgb, currentColor 85%, transparent);
  }

  .hover-overlay {
    @apply relative;

    &::after {
      @apply absolute inset-0 rounded-md bg-transparent transition-[background-color,inset] content-[''];
    }

    &:hover::after {
      @apply bg-surface/10;
    }
  }
}

@layer components {
  .map-placemark_user {
    fill: var(--color-surface);
    stroke: var(--color-on_surface);
  }
}

@utility surface {
  @apply bg-surface text-on_surface;
}
@utility card {
  @apply surface overflow-hidden shadow-md sm:rounded-lg;
}
@utility card-content {
  @apply px-4 py-2;
}
@utility chip {
  @apply surface overflow-hidden rounded-md shadow-md;
}
@utility chip-content {
  @apply px-2 py-0.5 text-sm;
}

@utility row {
  @apply flex flex-row items-center;
}
