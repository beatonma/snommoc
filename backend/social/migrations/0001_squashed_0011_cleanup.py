# Generated by Django 5.2.3 on 2025-07-30 16:57

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import social.models.token
import util.time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="OAuthToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=util.time.get_now)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("provider", models.CharField(max_length=50)),
                ("user_id", models.CharField(max_length=50)),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("provider", "user_id"),
                        name="unique_provider_user_id_per_provider",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="UserToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=util.time.get_now)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("pending_deletion", models.BooleanField(default=False)),
                (
                    "deletion_requested_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("token", models.UUIDField(default=uuid.uuid4)),
                (
                    "username",
                    models.CharField(
                        default=social.models.token._create_default_username,
                        max_length=16,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Must start and end with alphanumerics. Otherwise also allow dash, underscore, dot. Minimum 4 characters.",
                                regex="^[0-9a-zA-Z][0-9a-zA-Z-_.]{2,}[0-9a-zA-Z]$",
                            )
                        ],
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                (
                    "oauth_session",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.oauthtoken",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UsernameChanged",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=util.time.get_now)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("new_name", models.CharField(max_length=16)),
                ("previous_name", models.CharField(max_length=16)),
                (
                    "token",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.usertoken",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=util.time.get_now)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("target_id", models.PositiveIntegerField()),
                ("pending_deletion", models.BooleanField(default=False)),
                (
                    "deletion_requested_at",
                    models.DateTimeField(blank=True, default=None, null=True),
                ),
                ("text", models.CharField(max_length=240)),
                (
                    "flagged",
                    models.BooleanField(
                        default=False,
                        help_text="Somebody has flagged this comment for review",
                    ),
                ),
                (
                    "visible",
                    models.BooleanField(
                        default=True, help_text="This comment may be displayed publicly"
                    ),
                ),
                (
                    "target_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.usertoken",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("target_type", "target_id", "text", "user"),
                        name="unique_comment_per_user_per_object",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=util.time.get_now)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("target_id", models.PositiveIntegerField()),
                (
                    "vote_type",
                    models.CharField(
                        choices=[("aye", "Aye"), ("no", "No")], max_length=10
                    ),
                ),
                (
                    "target_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.usertoken",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("target_type", "target_id", "user"),
                        name="unique_user_vote_per_target",
                    )
                ],
            },
        ),
    ]
