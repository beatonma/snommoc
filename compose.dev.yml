name: snommoc

volumes:
    postgres_snommoc:
        name: postgres_snommoc

x-volume-django-manage: &volume-django-manage
  - type: bind
    source: ./backend
    target: /django
x-volume-logs: &volume-logs
  - type: bind
    source: ./runtime-dev/log
    target: /var/log/snommoc
x-volume-static: &volume-static
  - type: bind
    source: ./runtime-dev/static
    target: /var/www/static
x-volume-media: &volume-media
  - type: bind
    source: ./runtime-dev/media
    target: /var/www/media

x-common: &common
  env_file:
    - ".env.dev"
  restart: unless-stopped

x-watch-django: &watch-django
  watch:
    - action: sync
      path: ./backend
      target: /django
      ignore:
        - env/
        - __pycache__/
    - action: rebuild
      path: ./backend/requirements.txt

services:
  postgres:
    <<: *common
    extends:
      file: ./compose.common.yml
      service: postgres
    container_name: snommoc_postgres_dev

  redis:
    <<: *common
    extends:
      file: ./compose.common.yml
      service: redis
    ports:
      - "6379:6379"

  django: &django
    <<: *common
    build:
      target: dev_django
    extends:
      file: ./compose.common.yml
      service: django
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - <<: *volume-logs
      - <<: *volume-media
      - <<: *volume-static
    develop:
      <<: *watch-django

  django_manage:
    <<: *django
    profiles:
      - "manage"
    ports: []
    healthcheck:
      test: ["NONE"]
    entrypoint: ["sh"]
    volumes:
      - <<: *volume-django-manage
      - <<: *volume-logs
      - <<: *volume-media
      - <<: *volume-static

  next: &next
    <<: *common
    build:
      target: dev_nextjs
    extends:
      file: ./compose.common.yml
      service: next
    container_name: snommoc_next
    depends_on:
      django:
        condition: service_healthy
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json

  next_manage:
    <<: *next
    profiles:
      - "manage"
    container_name: snommoc_next_manage
    ports: []
    entrypoint: "npm run test"

  nginx:
    <<: *common
    build:
      target: dev_nginx
    extends:
      file: compose.common.yml
      service: nginx
    depends_on:
      django:
        condition: service_healthy
      next:
        condition: service_healthy
    ports:
      - "81:80"
    volumes:
      - <<: *volume-media
      - <<: *volume-static

  celery:
    <<: *common
    build:
      target: dev_celery
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - <<: *volume-logs
      - <<: *volume-media
      - <<: *volume-static
    develop:
      <<: *watch-django
