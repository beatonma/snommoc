# Generated by Django 3.0.2 on 2020-01-09 21:14

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    dependencies = [
        ('repository', '0003_auto_20191114_2151'),
    ]

    operations = [
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommitteeChair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommitteeMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Committee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstituencyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestedElection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DeclaredInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('description', models.CharField(max_length=160)),
                ('created', models.DateField(blank=True, null=True)),
                ('amended', models.DateField(blank=True, null=True)),
                ('deleted', models.DateField(blank=True, null=True)),
                ('registered_late', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeclaredInterestCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectionNationalResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Election')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('organisation', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperienceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernmentPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('hansard_name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernmentPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=16, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HouseMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.House')),
            ],
        ),
        migrations.CreateModel(
            name='MaidenSpeech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('subject', models.CharField(blank=True, max_length=32, null=True)),
                ('hansard', models.CharField(blank=True, help_text='Hansard ID', max_length=16, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.House')),
            ],
            options={
                'verbose_name_plural': 'Maiden Speeches',
            },
        ),
        migrations.CreateModel(
            name='OppositionPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('hansard_name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OppositionPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentaryPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('hansard_name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentaryPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartyTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('primary_color', models.CharField(help_text='Hex color code', max_length=6)),
                ('accent_color', models.CharField(help_text='Hex color code', max_length=6)),
                ('primary_text_color', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], help_text='Color for text that overlays primary_color', max_length=5)),
                ('accent_text_color', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], help_text='Color for text that overlays accent_color', max_length=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(help_text='What kind of address is this? e.g Parliamentary, Constituency...', max_length=32)),
                ('address', models.CharField(max_length=256)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectOfInterestCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Country')),
            ],
            options={
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='WebAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(help_text='What kind of address is this? e.g Twitter, personal site...', max_length=32)),
                ('url', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='mp',
            name='party',
        ),
        migrations.RemoveField(
            model_name='mp',
            name='person',
        ),
        migrations.AlterModelOptions(
            name='constituencyboundary',
            options={'verbose_name_plural': 'Constituency Boundaries'},
        ),
        migrations.AlterModelOptions(
            name='person',
            options={'ordering': ['name'], 'verbose_name_plural': 'People'},
        ),
        migrations.AddField(
            model_name='constituency',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='constituency',
            name='end',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='constituency',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='constituency',
            name='parliamentdotuk',
            field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True),
        ),
        migrations.AddField(
            model_name='constituency',
            name='start',
            field=models.DateField(null=True),
        ),
        migrations.AddField(
            model_name='constituencyboundary',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='constituencyboundary',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='party',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='party',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='person',
            name='active',
            field=models.BooleanField(default=None, help_text='Whether this person currently has a seat in parliament.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='person',
            name='constituency',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Constituency'),
        ),
        migrations.AddField(
            model_name='person',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='person',
            name='date_entered_house',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_left_house',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_birth',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_death',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='full_title',
            field=models.CharField(default=None, help_text='Official name with honorifics.', max_length=72),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='person',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='person',
            name='parliamentdotuk',
            field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True),
        ),
        migrations.AddField(
            model_name='person',
            name='party',
            field=models.ForeignKey(blank=True, help_text='Current party membership. Historic memberships can be retrieved via PartyAssociation model.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.Party'),
        ),
        migrations.AddField(
            model_name='person',
            name='theyworkforyou',
            field=models.PositiveIntegerField(help_text='ID used on theyworkforyou.com', null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='constituency_type',
            field=models.CharField(choices=[('county', 'County'), ('borough', 'Borough')], help_text='Borough, county...', max_length=10, null=True),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='mp',
            field=models.OneToOneField(help_text='Current representative', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='repository.Person'),
        ),
        migrations.AlterField(
            model_name='constituencyboundary',
            name='constituency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='repository.Constituency'),
        ),
        migrations.AlterField(
            model_name='person',
            name='family_name',
            field=models.CharField(blank=True, help_text='Last name', max_length=72, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='given_name',
            field=models.CharField(blank=True, help_text='First name', max_length=72, null=True),
        ),
        migrations.DeleteModel(
            name='Interest',
        ),
        migrations.DeleteModel(
            name='Mp',
        ),
        migrations.AddField(
            model_name='webaddress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='subjectofinterest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.SubjectOfInterestCategory'),
        ),
        migrations.AddField(
            model_name='subjectofinterest',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='physicaladdress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='partytheme',
            name='party',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='theme', to='repository.Party'),
        ),
        migrations.AddField(
            model_name='partyassociation',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Party'),
        ),
        migrations.AddField(
            model_name='partyassociation',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties', to='repository.Person'),
        ),
        migrations.AddField(
            model_name='parliamentarypostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='parliamentarypostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.ParliamentaryPost'),
        ),
        migrations.AddField(
            model_name='oppositionpostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='oppositionpostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.OppositionPost'),
        ),
        migrations.AddField(
            model_name='maidenspeech',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='housemembership',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='governmentpostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='governmentpostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.GovernmentPost'),
        ),
        migrations.AddField(
            model_name='experience',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.ExperienceCategory'),
        ),
        migrations.AddField(
            model_name='experience',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='electionnationalresult',
            name='winning_party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Party'),
        ),
        migrations.AddField(
            model_name='election',
            name='election_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.ElectionType'),
        ),
        migrations.AddField(
            model_name='declaredinterest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.DeclaredInterestCategory'),
        ),
        migrations.AddField(
            model_name='declaredinterest',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='constituency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Constituency'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Election'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='constituency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Constituency'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Election'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='mp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='committeemember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person'),
        ),
        migrations.AddField(
            model_name='committeechair',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.CommitteeMember'),
        ),
        migrations.AddField(
            model_name='person',
            name='country_of_birth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Country'),
        ),
        migrations.AddField(
            model_name='person',
            name='house',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='repository.House'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='person',
            name='town_of_birth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Town'),
        ),
        migrations.AlterUniqueTogether(
            name='partyassociation',
            unique_together={('start', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='housemembership',
            unique_together={('start', 'house', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='constituencyresult',
            unique_together={('election', 'constituency')},
        ),
    ]
