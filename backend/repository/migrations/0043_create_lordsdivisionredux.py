# Generated by Django 3.2.4 on 2021-11-23 18:24

import django.db.models.deletion
from django.db import migrations, models

import util.models.generics
import util.time


class Migration(migrations.Migration):

    dependencies = [
        ("repository", "0042_remove_old_lordsdivision_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="DivisionVoteType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(default=util.time.get_now)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=64, unique=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, util.models.generics.BaseModelMixin),
        ),
        migrations.CreateModel(
            name="LordsDivisionRedux",
            fields=[
                ("created_on", models.DateTimeField(default=util.time.get_now)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "parliamentdotuk",
                    models.PositiveIntegerField(
                        help_text="ID used on parliament.uk website",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("title", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("number", models.PositiveSmallIntegerField()),
                ("amendment_motion_notes", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("is_whipped", models.BooleanField()),
                ("is_government_content", models.BooleanField()),
                ("authoritative_content_count", models.PositiveSmallIntegerField()),
                ("authoritative_not_content_count", models.PositiveSmallIntegerField()),
                ("division_had_tellers", models.BooleanField()),
                ("teller_content_count", models.PositiveSmallIntegerField()),
                ("teller_not_content_count", models.PositiveSmallIntegerField()),
                ("member_content_count", models.PositiveSmallIntegerField()),
                ("member_not_content_count", models.PositiveSmallIntegerField()),
                ("is_house", models.BooleanField(null=True)),
                ("is_government_win", models.BooleanField(blank=True, null=True)),
                ("remote_voting_start", models.DateTimeField(blank=True, null=True)),
                ("remote_voting_end", models.DateTimeField(blank=True, null=True)),
                (
                    "division_was_exclusively_remote",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "sponsoring_member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sponsored_lords_divisions",
                        to="repository.person",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(models.Model, util.models.generics.BaseModelMixin),
        ),
        migrations.CreateModel(
            name="LordsDivisionMemberVote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(default=util.time.get_now)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "division",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes_redux",
                        to="repository.lordsdivisionredux",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lords_division_votes",
                        to="repository.person",
                    ),
                ),
                (
                    "vote_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="repository.divisionvotetype",
                    ),
                ),
            ],
            options={
                "ordering": ["-modified_on"],
            },
            bases=(models.Model, util.models.generics.BaseModelMixin),
        ),
        migrations.AddConstraint(
            model_name="lordsdivisionmembervote",
            constraint=models.UniqueConstraint(
                fields=("person", "division"),
                name="One vote per Person per LordsDivision",
            ),
        ),
    ]
