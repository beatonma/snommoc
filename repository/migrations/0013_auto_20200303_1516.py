# Generated by Django 3.0.2 on 2020-03-03 15:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('repository', '0012_auto_20200119_2157'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('act_name', models.CharField(blank=True, max_length=512, null=True)),
                ('label', models.CharField(max_length=512)),
                ('homepage', models.URLField()),
                ('date', models.DateField()),
                ('ballot_number', models.PositiveIntegerField(default=0)),
                ('bill_chapter', models.CharField(blank=True, max_length=64, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_money_bill', models.BooleanField(default=False)),
                ('public_involvement_allowed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillStage',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Bill')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillStageType',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommonsDivision',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('date', models.DateField()),
                ('division_number', models.PositiveSmallIntegerField()),
                ('uin', models.CharField(max_length=64)),
                ('ayes', models.PositiveSmallIntegerField(help_text='How many members voted for the motion')),
                ('noes', models.PositiveSmallIntegerField(help_text='How many members voted against the motion')),
                ('deferred_vote', models.BooleanField(default=False, help_text="A deferred vote is one that is not held immediately at the end of the debate, but at a later 'convenient' time")),
                ('abstentions', models.PositiveSmallIntegerField(help_text='How many members abstained from voting')),
                ('did_not_vote', models.PositiveSmallIntegerField()),
                ('errors', models.PositiveSmallIntegerField(help_text='How many votes were found to be recorded in error')),
                ('non_eligible', models.PositiveSmallIntegerField(help_text='How many members were ineligible to vote in this division')),
                ('suspended_or_expelled', models.PositiveSmallIntegerField(help_text='How many members were unable to vote due to suspension or expulsion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LordsDivision',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('date', models.DateField()),
                ('division_number', models.PositiveSmallIntegerField()),
                ('uin', models.CharField(max_length=64)),
                ('ayes', models.PositiveSmallIntegerField(help_text='How many members voted for the motion')),
                ('noes', models.PositiveSmallIntegerField(help_text='How many members voted against the motion')),
                ('description', models.CharField(max_length=1024)),
                ('whipped_vote', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentarySession',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=24)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='declaredinterestcategory',
            options={'verbose_name_plural': 'Declared interest categories'},
        ),
        migrations.AlterModelOptions(
            name='experiencecategory',
            options={'verbose_name_plural': 'Experience categories'},
        ),
        migrations.AlterModelOptions(
            name='physicaladdress',
            options={'verbose_name_plural': 'Physical addresses'},
        ),
        migrations.AlterModelOptions(
            name='subjectofinterest',
            options={'verbose_name_plural': 'Subjects of interest'},
        ),
        migrations.AlterModelOptions(
            name='subjectofinterestcategory',
            options={'verbose_name_plural': 'Subject of interest categories'},
        ),
        migrations.AlterModelOptions(
            name='unlinkedconstituency',
            options={'verbose_name_plural': 'Unlinked constituencies'},
        ),
        migrations.AlterModelOptions(
            name='webaddress',
            options={'verbose_name_plural': 'Web addresses'},
        ),
        migrations.AddField(
            model_name='person',
            name='wikipedia',
            field=models.CharField(blank=True, help_text="Path section of a wikipedia url (e.g. 'John_Baron_(politician)')", max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='committeechair',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='committeemember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='constituencyresult',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='experience',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='governmentpostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='housemembership',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='oppositionpostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='parliamentarypostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='partyassociation',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='PersonAlsoKnownAs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(max_length=128)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person')),
            ],
            options={
                'verbose_name': 'PersonAlsoKnownAs',
                'verbose_name_plural': 'People also known as',
            },
        ),
        migrations.CreateModel(
            name='LordsDivisionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('aye', models.BooleanField(default=False)),
                ('no', models.BooleanField(default=False)),
                ('abstention', models.BooleanField(default=False)),
                ('did_not_vote', models.BooleanField(default=False)),
                ('suspended_or_expelled', models.BooleanField(default=False)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='repository.LordsDivision')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='lordsdivision',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.ParliamentarySession'),
        ),
        migrations.CreateModel(
            name='CommonsDivisionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('aye', models.BooleanField(default=False)),
                ('no', models.BooleanField(default=False)),
                ('abstention', models.BooleanField(default=False)),
                ('did_not_vote', models.BooleanField(default=False)),
                ('suspended_or_expelled', models.BooleanField(default=False)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='repository.CommonsDivision')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='commonsdivision',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.ParliamentarySession'),
        ),
        migrations.CreateModel(
            name='BillStageSitting',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('formal', models.BooleanField()),
                ('provisional', models.BooleanField()),
                ('bill_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='repository.BillStage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='billstage',
            name='bill_stage_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.BillStageType'),
        ),
        migrations.AddField(
            model_name='billstage',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='repository.ParliamentarySession'),
        ),
        migrations.CreateModel(
            name='BillPublication',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Bill')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bill',
            name='bill_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.BillType'),
        ),
        migrations.AddField(
            model_name='bill',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='repository.ParliamentarySession'),
        ),
        migrations.CreateModel(
            name='BillSponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Raw name of the person if a Person instance cannot be found.', max_length=128, null=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.Bill')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.Person')),
            ],
            options={
                'unique_together': {('person', 'bill')},
            },
        ),
    ]
