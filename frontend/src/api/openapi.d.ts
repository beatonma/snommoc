/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/ping/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Ping */
        get: operations["api_urls_ping"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        /** Ping */
        head: operations["api_urls_ping"];
        patch?: never;
        trace?: never;
    };
    "/api/bills/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Bills */
        get: operations["api_routers_bills_bills"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bills/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Bill */
        get: operations["api_routers_bills_bill"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constituencies/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Constituencies
         * @description Searchable constituencies. If no query, returns current constituencies.
         */
        get: operations["api_routers_constituency_constituencies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/constituencies/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Constituency */
        get: operations["api_routers_constituency_constituency"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Divisions */
        get: operations["api_routers_divisions_divisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/commons/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Commons Divisions */
        get: operations["api_routers_divisions_commons_divisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/commons/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Commons Division */
        get: operations["api_routers_divisions_commons_division"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/commons/{parliamentdotuk}/votes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Commons Division Votes */
        get: operations["api_routers_divisions_commons_division_votes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/lords/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lords Divisions */
        get: operations["api_routers_divisions_lords_divisions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/lords/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lords Division */
        get: operations["api_routers_divisions_lords_division"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/divisions/lords/{parliamentdotuk}/votes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Lords Division Votes */
        get: operations["api_routers_divisions_lords_division_votes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/elections/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Elections */
        get: operations["api_routers_elections_elections"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/elections/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Election */
        get: operations["api_routers_elections_election"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/maps/constituencies/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Constituencies */
        get: operations["api_routers_maps_constituencies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/maps/parties/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Parties */
        get: operations["api_routers_maps_parties"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Members */
        get: operations["api_routers_members_members"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Member */
        get: operations["api_routers_members_member"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/{parliamentdotuk}/career/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Member Career */
        get: operations["api_routers_members_member_career"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/members/{parliamentdotuk}/votes/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Member Votes */
        get: operations["api_routers_members_member_votes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organisations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organisations */
        get: operations["api_routers_organisations_organisations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/organisations/{slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Organisation */
        get: operations["api_routers_organisations_organisation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/parties/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Parties */
        get: operations["api_routers_party_parties"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/parties/{parliamentdotuk}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Party */
        get: operations["api_routers_party_party"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/zeitgeist/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Zeitgeist */
        get: operations["api_routers_zeitgeist_zeitgeist"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Input */
        Input: {
            /**
             * Limit
             * @default 24
             */
            limit: number;
            /**
             * Offset
             * @default 0
             */
            offset: number;
        };
        /** BillMiniSchema */
        BillMiniSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            title: components["schemas"]["Title"];
            /** Description */
            description?: string | null;
            /**
             * Last Update
             * Format: date-time
             */
            last_update: string;
            current_house: components["schemas"]["Safe_House_"];
        };
        House: components["schemas"]["HouseType"];
        /** @enum {string} */
        HouseType: "Commons" | "Lords";
        /** PagedBillMiniSchema */
        PagedBillMiniSchema: {
            /** Items */
            items: components["schemas"]["BillMiniSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        ParliamentId: number;
        Safe_House_: components["schemas"]["House"] | null;
        Title: string;
        AdministrativeName: string;
        /** BillFullSchema */
        BillFullSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Title */
            title: string;
            /** Description */
            description?: string | null;
            type: components["schemas"]["BillType"];
            /**
             * Last Update
             * Format: date-time
             */
            last_update: string;
            /** Is Act */
            is_act: boolean;
            /** Is Defeated */
            is_defeated: boolean;
            /** Date Withdrawn */
            date_withdrawn?: string | null;
            /** Sponsors */
            sponsors: components["schemas"]["Sponsor"][];
            /** Publications */
            publications: components["schemas"]["Publication"][];
            session_introduced: components["schemas"]["Session"];
            /** Sessions */
            sessions: components["schemas"]["Session"][];
            current_stage: components["schemas"]["Stage"] | null;
            /** Stages */
            stages: components["schemas"]["Stage"][];
        };
        /** BillType */
        BillType: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Category */
            category: string;
            /** Name */
            name: string;
            /** Description */
            description: string;
        };
        /** ItemThemeSchema */
        ItemThemeSchema: {
            /** Primary */
            primary: string;
            /** On Primary */
            on_primary: string;
            /** Accent */
            accent: string;
            /** On Accent */
            on_accent: string;
        };
        /** MemberMiniSchema */
        MemberMiniSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["PersonName"];
            portrait?: components["schemas"]["MemberPortrait"] | null;
            /** Current Posts */
            current_posts: string[];
            party: components["schemas"]["PartyMiniSchema"] | null;
            constituency: components["schemas"]["_MemberConstituencySchema"] | null;
            /** Lord Type */
            lord_type?: string | null;
        };
        /** MemberPortrait */
        MemberPortrait: {
            fullsize_url: components["schemas"]["Url"] | null;
            square_url: components["schemas"]["Url"] | null;
            tall_url: components["schemas"]["Url"] | null;
            wide_url: components["schemas"]["Url"] | null;
        };
        /** OrganisationSchema */
        OrganisationSchema: {
            name: components["schemas"]["AdministrativeName"];
            /** Slug */
            slug: string;
            url: components["schemas"]["Url"] | null;
        };
        /** PartyMiniSchema */
        PartyMiniSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            theme: components["schemas"]["ItemThemeSchema"] | null;
            name: components["schemas"]["AdministrativeName"];
            /** Logo */
            logo: string | null;
            /** Logo Mask */
            logo_mask: string | null;
            /** Active Member Count */
            active_member_count: number;
            /** Active Commons Members */
            active_commons_members?: number | null;
        };
        PersonName: string;
        /** Publication */
        Publication: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Title */
            title: string;
            /**
             * Date
             * Format: date-time
             */
            date: string;
            /** Type */
            type: string;
            /** Links */
            links: components["schemas"]["PublicationLink"][];
        };
        /** PublicationLink */
        PublicationLink: {
            /** Title */
            title: string;
            url: components["schemas"]["Url"];
            /** Content Type */
            content_type: string;
        };
        /** Session */
        Session: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Name */
            name: string | null;
        };
        /** Sponsor */
        Sponsor: {
            /** Id */
            id: number;
            profile?: components["schemas"]["MemberMiniSchema"] | null;
            organisation: components["schemas"]["OrganisationSchema"] | null;
        };
        /** Stage */
        Stage: {
            session: components["schemas"]["Session"];
            house: components["schemas"]["Safe_House_"];
            /** Description */
            description: string | null;
            /** Sittings */
            sittings: string[];
        };
        Url: string;
        /**
         * _MemberConstituencySchema
         * @description Simple constituency data for embedding in member
         */
        _MemberConstituencySchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** ConstituencyMiniSchema */
        ConstituencyMiniSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
            mp: components["schemas"]["_ConstituencyMemberSchema"] | null;
        };
        /** PagedConstituencyMiniSchema */
        PagedConstituencyMiniSchema: {
            /** Items */
            items: components["schemas"]["ConstituencyMiniSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /**
         * _ConstituencyMemberSchema
         * @description Simple member data for embedding in constituency
         */
        _ConstituencyMemberSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["PersonName"];
            party: components["schemas"]["PartyMiniSchema"] | null;
        };
        /** ConstituencyCandidateSchema */
        ConstituencyCandidateSchema: {
            name: components["schemas"]["PersonName"];
            profile?: components["schemas"]["MemberMiniSchema"] | null;
            party: components["schemas"]["PartyMiniSchema"] | null;
            /** Order */
            order: number;
            /** Votes */
            votes: number;
        };
        /** ConstituencyFullSchema */
        ConstituencyFullSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
            mp: components["schemas"]["MemberMiniSchema"] | null;
            /** Boundary */
            boundary?: string | null;
            /** Results */
            results: components["schemas"]["ResultsSchema"][];
        };
        /** ElectionSchema */
        ElectionSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            /** Date */
            date: string | null;
            /** Election Type */
            election_type?: string | null;
        };
        /** ResultsSchema */
        ResultsSchema: {
            election: components["schemas"]["ElectionSchema"];
            winner: components["schemas"]["MemberMiniSchema"] | null;
            /** Electorate */
            electorate: number;
            /** Turnout */
            turnout: number;
            /** Result */
            result: string;
            /** Majority */
            majority: number;
            /** Candidates */
            candidates: components["schemas"]["ConstituencyCandidateSchema"][];
        };
        /** DivisionMiniSchema */
        DivisionMiniSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            title: components["schemas"]["Title"];
            house: components["schemas"]["House"];
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Is Passed */
            is_passed: boolean;
        };
        /** PagedDivisionMiniSchema */
        PagedDivisionMiniSchema: {
            /** Items */
            items: components["schemas"]["DivisionMiniSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** CommonsDivisionSchema */
        CommonsDivisionSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Title */
            title: string;
            house: components["schemas"]["House"];
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Is Deferred Vote */
            is_deferred_vote: boolean;
            /** Is Passed */
            is_passed: boolean;
            /** Ayes */
            ayes: number;
            /** Noes */
            noes: number;
            /** Did Not Vote */
            did_not_vote: number;
        };
        /** @enum {string} */
        DivisionVoteType: "aye" | "no" | "did_not_vote";
        /** DivisionVoteMemberSchema */
        DivisionVoteMemberSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["PersonName"];
            portrait?: components["schemas"]["MemberPortrait"] | null;
            party: components["schemas"]["PartyMiniSchema"];
        };
        /** PagedVoteWithPersonSchema */
        PagedVoteWithPersonSchema: {
            /** Items */
            items: components["schemas"]["VoteWithPersonSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** VoteWithPersonSchema */
        VoteWithPersonSchema: {
            vote: components["schemas"]["DivisionVoteType"];
            person: components["schemas"]["DivisionVoteMemberSchema"];
        };
        /** LordsDivisionSchema */
        LordsDivisionSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Title */
            title: string;
            house: components["schemas"]["House"];
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Description */
            description: string | null;
            sponsor?: components["schemas"]["MemberMiniSchema"] | null;
            /** Is Whipped Vote */
            is_whipped_vote: boolean;
            /** Is Passed */
            is_passed: boolean;
            /** Ayes */
            ayes: number;
            /** Noes */
            noes: number;
        };
        /** PagedElectionSchema */
        PagedElectionSchema: {
            /** Items */
            items: components["schemas"]["ElectionSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** MapQuery */
        MapQuery: {
            /** Latitude */
            latitude?: number;
            /** Longitude */
            longitude?: number;
        };
        /** ConstituencyMapMP */
        ConstituencyMapMP: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["PersonName"];
            portrait?: components["schemas"]["MemberPortrait"] | null;
            party: components["schemas"]["PartyMiniSchema"] | null;
        };
        /** ConstituencyMapSchema */
        ConstituencyMapSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            mp: components["schemas"]["ConstituencyMapMP"] | null;
            /** Boundary */
            boundary?: string | null;
        };
        /** PagedConstituencyMapSchema */
        PagedConstituencyMapSchema: {
            /** Items */
            items: components["schemas"]["ConstituencyMapSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** PartyMapSchema */
        PartyMapSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            theme: components["schemas"]["ItemThemeSchema"] | null;
            name: components["schemas"]["AdministrativeName"];
            /** Logo */
            logo: string | null;
            /** Logo Mask */
            logo_mask: string | null;
            /** Active Member Count */
            active_member_count: number;
            /** Active Commons Members */
            active_commons_members?: number | null;
            /** Territory */
            territory?: string | null;
        };
        /** @enum {string} */
        StatusFilter: "current" | "inactive" | "historical" | "all";
        /** PagedMemberMiniSchema */
        PagedMemberMiniSchema: {
            /** Items */
            items: components["schemas"]["MemberMiniSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** AddressSchema */
        AddressSchema: {
            /** Physical */
            physical: components["schemas"]["PhysicalAddressSchema"][];
            /** Web */
            web: components["schemas"]["WebAddressSchema"][];
        };
        /** CommitteeMemberSchema */
        CommitteeMemberSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["AdministrativeName"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        EmailAddress: string;
        /** MemberProfile */
        MemberProfile: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            name: components["schemas"]["PersonName"];
            portrait?: components["schemas"]["PortraitSchema"] | null;
            /** Current Posts */
            current_posts: string[];
            party: components["schemas"]["PartyMiniSchema"] | null;
            constituency: components["schemas"]["ConstituencyMiniSchema"] | null;
            /** Lord Type */
            lord_type?: string | null;
            /** Full Title */
            full_title: string | null;
            status: components["schemas"]["MemberStatus"];
            house?: components["schemas"]["HouseType"] | null;
            /** Date Of Birth */
            date_of_birth: string | null;
            /** Date Of Death */
            date_of_death: string | null;
            /** Age */
            age: number;
            /** Gender */
            gender: string | null;
            place_of_birth: components["schemas"]["TownSchema"] | null;
            /** Current Committees */
            current_committees: components["schemas"]["CommitteeMemberSchema"][];
            address: components["schemas"]["AddressSchema"];
            wikipedia: components["schemas"]["WikipediaPath"] | null;
        };
        /** MemberStatus */
        MemberStatus: {
            /** Is Current */
            is_current: boolean;
            /** Is Active */
            is_active: boolean;
            /** Description */
            description: string | null;
            /** Extra Notes */
            extra_notes: string | null;
            /** Since */
            since: string | null;
        };
        PhoneNumber: string;
        /** PhysicalAddressSchema */
        PhysicalAddressSchema: {
            /** Description */
            description?: string | null;
            /** Address */
            address?: string | null;
            /** Postcode */
            postcode?: string | null;
            phone: components["schemas"]["PhoneNumber"] | null;
            fax: components["schemas"]["PhoneNumber"] | null;
            email?: components["schemas"]["EmailAddress"] | null;
        };
        /** PortraitSchema */
        PortraitSchema: {
            /** Full */
            full?: string | null;
            /** Square */
            square?: string | null;
            /** Wide */
            wide?: string | null;
            /** Tall */
            tall?: string | null;
        };
        /** TownSchema */
        TownSchema: {
            town: components["schemas"]["AdministrativeName"];
            country: components["schemas"]["AdministrativeName"];
        };
        /** WebAddressSchema */
        WebAddressSchema: {
            url: components["schemas"]["Url"];
            /** Description */
            description: string | null;
        };
        WikipediaPath: string;
        /** ConstituencyRepresentation */
        ConstituencyRepresentation: {
            constituency: components["schemas"]["ConstituencyMiniSchema"];
            /**
             * Start
             * Format: date
             */
            start: string;
            /** End */
            end: string | null;
        };
        /** ExperienceSchema */
        ExperienceSchema: {
            /** Category */
            category: string | null;
            organisation: components["schemas"]["OrganisationSchema"] | null;
            /** Title */
            title: string | null;
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** HouseMembershipSchema */
        HouseMembershipSchema: {
            house: components["schemas"]["HouseType"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** MemberCareerHistory */
        MemberCareerHistory: {
            /** Posts */
            posts: components["schemas"]["PostSchema"][];
            /** Parties */
            parties: components["schemas"]["PartyAffiliationSchema"][];
            /** Constituencies */
            constituencies: components["schemas"]["ConstituencyRepresentation"][];
            /** Committees */
            committees: components["schemas"]["CommitteeMemberSchema"][];
            /** Experiences */
            experiences: components["schemas"]["ExperienceSchema"][];
            /** Houses */
            houses: components["schemas"]["HouseMembershipSchema"][];
            /** Subjects Of Interest */
            subjects_of_interest: {
                [key: string]: string[];
            };
            /** Interests */
            interests: components["schemas"]["RegisteredInterestSchema"][];
        };
        /** PartyAffiliationSchema */
        PartyAffiliationSchema: {
            party: components["schemas"]["PartyMiniSchema"];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** PostSchema */
        PostSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Type */
            type: string;
            name: components["schemas"]["AdministrativeName"];
            /** Hansard */
            hansard: string | null;
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** RegisteredInterestDescriptionData */
        RegisteredInterestDescriptionData: {
            /** Table */
            table: [
                string,
                string | number
            ][];
            /** Additional Values */
            additional_values: string[];
            /** Registration Dates */
            registration_dates: [
                string,
                string
            ][];
            /** Start */
            start: string | null;
            /** End */
            end: string | null;
        };
        /** RegisteredInterestSchema */
        RegisteredInterestSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            /** Category */
            category: string | null;
            description: components["schemas"]["RegisteredInterestDescriptionData"];
            /** Created */
            created: string | null;
            /** Amended */
            amended: string | null;
            /** Deleted */
            deleted: string | null;
            /** Children */
            children: components["schemas"]["RegisteredInterestSchema"][];
        };
        /** DivisionWithVoteSchema */
        DivisionWithVoteSchema: {
            vote: components["schemas"]["DivisionVoteType"];
            division: components["schemas"]["DivisionMiniSchema"];
        };
        /** PagedDivisionWithVoteSchema */
        PagedDivisionWithVoteSchema: {
            /** Items */
            items: components["schemas"]["DivisionWithVoteSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** PagedOrganisationSchema */
        PagedOrganisationSchema: {
            /** Items */
            items: components["schemas"]["OrganisationSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** PagedPartyMiniSchema */
        PagedPartyMiniSchema: {
            /** Items */
            items: components["schemas"]["PartyMiniSchema"][];
            /** Count */
            count: number;
            /** Page Size */
            page_size: number;
            /** Previous */
            previous: number | null;
            /** Next */
            next: number | null;
        };
        /** GenderDemographics */
        GenderDemographics: {
            /**
             * Modified At
             * Format: date-time
             */
            modified_at: string;
            /** House */
            house: string;
            /** Male Member Count */
            male_member_count: number;
            /** Female Member Count */
            female_member_count: number;
            /** Non Binary Member Count */
            non_binary_member_count: number;
            /** Total Member Count */
            total_member_count: number;
        };
        /** LordsDemographics */
        LordsDemographics: {
            /**
             * Modified At
             * Format: date-time
             */
            modified_at: string;
            /** Life Count */
            life_count: number;
            /** Hereditary Count */
            hereditary_count: number;
            /** Bishop Count */
            bishop_count: number;
            /** Total Count */
            total_count: number;
        };
        /** PartyFullSchema */
        PartyFullSchema: {
            parliamentdotuk: components["schemas"]["ParliamentId"];
            theme: components["schemas"]["ItemThemeSchema"] | null;
            name: components["schemas"]["PersonName"];
            short_name: components["schemas"]["PersonName"] | null;
            long_name: components["schemas"]["PersonName"] | null;
            homepage: components["schemas"]["Url"] | null;
            /** Year Founded */
            year_founded: number | null;
            wikipedia: components["schemas"]["WikipediaPath"] | null;
            /** Logo */
            logo: string | null;
            /** Logo Mask */
            logo_mask: string | null;
            /** Active Member Count */
            active_member_count: number;
            /** Gender Demographics */
            gender_demographics: components["schemas"]["GenderDemographics"][];
            lords_demographics?: components["schemas"]["LordsDemographics"] | null;
        };
        /** Motd */
        Motd: {
            /** Title */
            title: string | null;
            /** Description */
            description: string | null;
            action_url: components["schemas"]["Url"] | null;
        };
        /** ZeitgeistItem[BillMiniSchema] */
        ZeitgeistItem_BillMiniSchema_: {
            /** Priority */
            priority: number;
            /** Reason */
            reason: string;
            target: components["schemas"]["BillMiniSchema"];
        };
        /** ZeitgeistItem[DivisionMiniSchema] */
        ZeitgeistItem_DivisionMiniSchema_: {
            /** Priority */
            priority: number;
            /** Reason */
            reason: string;
            target: components["schemas"]["DivisionMiniSchema"];
        };
        /** ZeitgeistItem[MemberMiniSchema] */
        ZeitgeistItem_MemberMiniSchema_: {
            /** Priority */
            priority: number;
            /** Reason */
            reason: string;
            target: components["schemas"]["MemberMiniSchema"];
        };
        /** ZeitgeistSchema */
        ZeitgeistSchema: {
            /** Motd */
            motd: components["schemas"]["Motd"][];
            /** People */
            people: components["schemas"]["ZeitgeistItem_MemberMiniSchema_"][];
            /** Divisions */
            divisions: components["schemas"]["ZeitgeistItem_DivisionMiniSchema_"][];
            /** Bills */
            bills: components["schemas"]["ZeitgeistItem_BillMiniSchema_"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_urls_ping: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_urls_ping: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    api_routers_bills_bills: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedBillMiniSchema"];
                };
            };
        };
    };
    api_routers_bills_bill: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BillFullSchema"];
                };
            };
        };
    };
    api_routers_constituency_constituencies: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedConstituencyMiniSchema"];
                };
            };
        };
    };
    api_routers_constituency_constituency: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ConstituencyFullSchema"];
                };
            };
        };
    };
    api_routers_divisions_divisions: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedDivisionMiniSchema"];
                };
            };
        };
    };
    api_routers_divisions_commons_divisions: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedDivisionMiniSchema"];
                };
            };
        };
    };
    api_routers_divisions_commons_division: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommonsDivisionSchema"];
                };
            };
        };
    };
    api_routers_divisions_commons_division_votes: {
        parameters: {
            query?: {
                query?: string;
                vote_type?: "aye" | "no" | "did_not_vote";
                limit?: number;
                offset?: number;
            };
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedVoteWithPersonSchema"];
                };
            };
        };
    };
    api_routers_divisions_lords_divisions: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedDivisionMiniSchema"];
                };
            };
        };
    };
    api_routers_divisions_lords_division: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LordsDivisionSchema"];
                };
            };
        };
    };
    api_routers_divisions_lords_division_votes: {
        parameters: {
            query?: {
                query?: string;
                vote_type?: "aye" | "no" | "did_not_vote";
                limit?: number;
                offset?: number;
            };
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedVoteWithPersonSchema"];
                };
            };
        };
    };
    api_routers_elections_elections: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedElectionSchema"];
                };
            };
        };
    };
    api_routers_elections_election: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ElectionSchema"];
                };
            };
        };
    };
    api_routers_maps_constituencies: {
        parameters: {
            query?: {
                latitude?: number;
                longitude?: number;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedConstituencyMapSchema"];
                };
            };
        };
    };
    api_routers_maps_parties: {
        parameters: {
            query?: {
                latitude?: number;
                longitude?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PartyMapSchema"][];
                };
            };
        };
    };
    api_routers_members_members: {
        parameters: {
            query?: {
                query?: string;
                party?: number;
                house?: components["schemas"]["HouseType"] | null;
                status?: components["schemas"]["StatusFilter"] | null;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedMemberMiniSchema"];
                };
            };
        };
    };
    api_routers_members_member: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberProfile"];
                };
            };
        };
    };
    api_routers_members_member_career: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MemberCareerHistory"];
                };
            };
        };
    };
    api_routers_members_member_votes: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedDivisionWithVoteSchema"];
                };
            };
        };
    };
    api_routers_organisations_organisations: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedOrganisationSchema"];
                };
            };
        };
    };
    api_routers_organisations_organisation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrganisationSchema"];
                };
            };
        };
    };
    api_routers_party_parties: {
        parameters: {
            query?: {
                query?: string;
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedPartyMiniSchema"];
                };
            };
        };
    };
    api_routers_party_party: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                parliamentdotuk: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PartyFullSchema"];
                };
            };
        };
    };
    api_routers_zeitgeist_zeitgeist: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ZeitgeistSchema"];
                };
            };
        };
    };
}
