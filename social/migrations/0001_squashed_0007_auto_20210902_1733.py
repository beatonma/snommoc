# Generated by Django 3.2.4 on 2021-11-24 15:40

import uuid

import django.core.validators
import django.utils.timezone
from django.db import migrations, models

import social.models.token
import util.time


class Migration(migrations.Migration):

    replaces = [
        ("social", "0001_initial"),
        ("social", "0002_signinserviceprovider_usertoken"),
        ("social", "0003_auto_20200414_1507"),
        ("social", "0004_auto_20200414_1605"),
        ("social", "0005_auto_20200604_0954"),
        ("social", "0006_auto_20200820_1823"),
        ("social", "0007_auto_20210902_1733"),
    ]

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("repository", "0001_squashed_0033_auto_20210902_1733"),
    ]

    operations = [
        migrations.CreateModel(
            name="SignInServiceProvider",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserToken",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                (
                    "provider_account_id",
                    models.CharField(editable=False, max_length=100, unique=True),
                ),
                ("token", models.UUIDField(default=uuid.uuid4)),
                ("enabled", models.BooleanField(default=True)),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="social.signinserviceprovider",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        default=social.models.token._create_default_username,
                        max_length=16,
                        unique=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("target_id", models.PositiveIntegerField()),
                ("text", models.CharField(max_length=240)),
                (
                    "flagged",
                    models.BooleanField(
                        default=False,
                        help_text="Somebody has flagged this comment for review",
                    ),
                ),
                (
                    "visible",
                    models.BooleanField(
                        default=True, help_text="This comment may be displayed publicly"
                    ),
                ),
                (
                    "target_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="social.usertoken",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
            },
        ),
        migrations.CreateModel(
            name="Vote",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("target_id", models.PositiveIntegerField()),
                (
                    "target_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="social.usertoken",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VoteType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=16, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="vote",
            name="vote_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social.votetype"
            ),
        ),
        migrations.AddConstraint(
            model_name="vote",
            constraint=models.UniqueConstraint(
                fields=("target_type", "target_id", "user"),
                name="unique_user_vote_per_target",
            ),
        ),
        migrations.AddConstraint(
            model_name="comment",
            constraint=models.UniqueConstraint(
                fields=("target_type", "target_id", "text", "user"),
                name="unique_comment_per_user_per_object",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="deletion_requested_at",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name="comment",
            name="pending_deletion",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="usertoken",
            name="deletion_requested_at",
            field=models.DateTimeField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name="usertoken",
            name="pending_deletion",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="comment",
            name="created_on",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="comment",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="social.usertoken",
            ),
        ),
        migrations.AlterField(
            model_name="signinserviceprovider",
            name="created_on",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="usertoken",
            name="created_on",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="usertoken",
            name="username",
            field=models.CharField(
                default=social.models.token._create_default_username,
                max_length=16,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message=(
                            "Must start and end with alphanumerics. Otherwise also"
                            " allow dash, underscore, dot. Minimum 4 characters."
                        ),
                        regex="^[0-9a-zA-Z][0-9a-zA-Z-_.]{2,}[0-9a-zA-Z]$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="vote",
            name="created_on",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="vote",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="social.usertoken",
            ),
        ),
        migrations.AlterField(
            model_name="votetype",
            name="created_on",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="comment",
            name="created_on",
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name="signinserviceprovider",
            name="created_on",
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.CreateModel(
            name="UsernameChanged",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_on", models.DateTimeField(default=util.time.get_now)),
                ("modified_on", models.DateTimeField(auto_now=True)),
                ("new_name", models.CharField(max_length=16)),
                ("previous_name", models.CharField(max_length=16)),
                (
                    "token",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social.usertoken",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AlterField(
            model_name="usertoken",
            name="created_on",
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name="vote",
            name="created_on",
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name="votetype",
            name="created_on",
            field=models.DateTimeField(default=util.time.get_now),
        ),
    ]
