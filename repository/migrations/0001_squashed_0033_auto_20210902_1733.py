# Generated by Django 3.2.4 on 2021-10-28 17:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import util.time


class Migration(migrations.Migration):

    replaces = [('repository', '0001_initial'), ('repository', '0002_auto_20191110_1804'), ('repository', '0003_auto_20191114_2151'), ('repository', '0004_auto_20200109_2114'), ('repository', '0005_auto_20200111_2040'), ('repository', '0006_auto_20200112_1757'), ('repository', '0007_auto_20200112_1816'), ('repository', '0008_auto_20200113_2124'), ('repository', '0009_auto_20200113_2132'), ('repository', '0010_auto_20200114_1957'), ('repository', '0011_auto_20200114_2034'), ('repository', '0012_auto_20200119_2157'), ('repository', '0013_auto_20200303_1516'), ('repository', '0014_auto_20200316_2026'), ('repository', '0015_auto_20200318_1249'), ('repository', '0016_auto_20200318_1617'), ('repository', '0017_memberportrait'), ('repository', '0018_person_current_post'), ('repository', '0019_auto_20200423_1919'), ('repository', '0020_constituencyalsoknownas'), ('repository', '0021_auto_20200511_1324'), ('repository', '0022_auto_20200511_1347'), ('repository', '0023_auto_20200511_1527'), ('repository', '0024_auto_20200511_1536'), ('repository', '0025_auto_20200513_1638'), ('repository', '0026_auto_20200820_1823'), ('repository', '0027_auto_20210419_1343'), ('repository', '0028_auto_20210428_1326'), ('repository', '0029_auto_20210429_1550'), ('repository', '0030_alter_declaredinterest_description'), ('repository', '0031_auto_20210505_1928'), ('repository', '0032_auto_20210510_1855'), ('repository', '0033_auto_20210902_1733')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Party',
            fields=[
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('wikipedia', models.CharField(blank=True, help_text="Path section of a wikipedia url (e.g. 'John_Baron_(politician)')", max_length=128, null=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('short_name', models.CharField(blank=True, default=None, max_length=16, null=True, unique=True)),
                ('long_name', models.CharField(blank=True, default=None, help_text='Official name', max_length=128, null=True, unique=True)),
                ('homepage', models.URLField(blank=True, null=True)),
                ('year_founded', models.PositiveSmallIntegerField(default=0)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Parties',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Canonical name for this person.', max_length=72)),
                ('given_name', models.CharField(help_text='First name', max_length=72, null=True)),
                ('family_name', models.CharField(help_text='Last name', max_length=72, null=True)),
                ('additional_name', models.CharField(blank=True, help_text='Middle name(s)', max_length=72, null=True)),
                ('gender', models.CharField(blank=True, default=None, max_length=16, null=True)),
                ('active', models.BooleanField(default=None, help_text='Whether this person currently has a seat in parliament.')),
            ],
            options={
                'verbose_name_plural': 'People',
                'ordering': ['name'],
            },
        ),
        # migrations.CreateModel(
        #     name='WebLink',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('url', models.URLField(unique=True)),
        #     ],
        # ),
        # migrations.CreateModel(
        #     name='Mp',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('start', models.DateField(null=True)),
        #         ('end', models.DateField(blank=True, null=True)),
        #         ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
        #         ('theyworkforyou', models.PositiveIntegerField(help_text='ID used on theyworkforyou.com', null=True, unique=True)),
        #     ],
        #     options={
        #         'verbose_name': 'MP',
        #         'verbose_name_plural': 'MPs',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='Links',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('wikipedia', models.CharField(blank=True, help_text="Path section of a wikipedia url (e.g. 'John_Baron_(politician)')", max_length=64, null=True)),
        #         ('phone_parliament', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='National office phone number', max_length=128, null=True, region=None)),
        #         ('phone_constituency', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Local office phone number', max_length=128, null=True, region=None)),
        #         ('email', models.EmailField(blank=True, max_length=254, null=True)),
        #         ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='links', related_query_name='links', to='repository.person')),
        #     ],
        #     options={
        #         'verbose_name_plural': 'Personal links',
        #     },
        # ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('ordinance_survey_name', models.CharField(blank=True, max_length=64, null=True)),
                ('gss_code', models.CharField(blank=True, help_text='Government Statistical Service ID', max_length=12, null=True)),
                ('constituency_type', models.CharField(choices=[('county', 'County'), ('borough', 'Borough')], help_text='Borough, county...', max_length=10, null=True)),
                ('mp', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='constituency', to='repository.mp')),
                ('created_on', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('end', models.DateField(blank=True, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('start', models.DateField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Constituencies',
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommitteeChair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommitteeMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.committee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstituencyResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContestedElection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DeclaredInterest',
            fields=[
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', null=True, unique=True)),
                ('description', models.CharField(max_length=160)),
                ('created', models.DateField(blank=True, null=True)),
                ('amended', models.DateField(blank=True, null=True)),
                ('deleted', models.DateField(blank=True, null=True)),
                ('registered_late', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeclaredInterestCategory',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Declared interest categories',
            },
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectionNationalResult',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.election')),
                ('winning_party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('organisation', models.CharField(blank=True, max_length=64, null=True)),
                ('title', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperienceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Experience categories',
            },
        ),
        migrations.CreateModel(
            name='GovernmentPost',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
                ('hansard_name', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernmentPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=16, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HouseMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.house')),
            ],
        ),
        migrations.CreateModel(
            name='MaidenSpeech',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('subject', models.CharField(blank=True, max_length=32, null=True)),
                ('hansard', models.CharField(blank=True, help_text='Hansard ID', max_length=16, null=True)),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.house')),
            ],
            options={
                'verbose_name_plural': 'Maiden Speeches',
            },
        ),
        migrations.CreateModel(
            name='OppositionPost',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
                ('hansard_name', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OppositionPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentaryPost',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
                ('hansard_name', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentaryPostMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartyAssociation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.party')),
            ],
        ),
        migrations.CreateModel(
            name='PartyTheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('primary_color', models.CharField(help_text='Hex color code', max_length=6)),
                ('accent_color', models.CharField(help_text='Hex color code', max_length=6)),
                ('primary_text_color', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], help_text='Color for text that overlays primary_color', max_length=5)),
                ('accent_text_color', models.CharField(choices=[('light', 'light'), ('dark', 'dark')], help_text='Color for text that overlays accent_color', max_length=5)),
                ('party', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='theme', to='repository.party')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(help_text='What kind of address is this? e.g Parliamentary, Constituency...', max_length=32)),
                ('address', models.CharField(max_length=256)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('fax', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectOfInterest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectOfInterestCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Subject of interest categories',
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.country')),
            ],
            options={
                'unique_together': {('name', 'country')},
            },
        ),
        migrations.CreateModel(
            name='WebAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(help_text='What kind of address is this? e.g Twitter, personal site...', max_length=32)),
                ('url', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='constituency',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.constituency'),
        ),
        migrations.AddField(
            model_name='person',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='person',
            name='date_entered_house',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_left_house',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_birth',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='date_of_death',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='full_title',
            field=models.CharField(blank=True, help_text='Official name with honorifics.', max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='person',
            name='modified_on',
            field=models.DateTimeField(auto_now=True),
        ),
        # migrations.AddField(
        #     model_name='person',
        #     name='parliamentdotuk',
        #     field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True),
        # ),
        migrations.AddField(
            model_name='person',
            name='party',
            field=models.ForeignKey(blank=True, help_text='Current party membership. Historic memberships can be retrieved via PartyAssociation model.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.party'),
        ),
        migrations.AddField(
            model_name='person',
            name='theyworkforyou',
            field=models.PositiveIntegerField(help_text='ID used on theyworkforyou.com', null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='mp',
            field=models.OneToOneField(help_text='Current representative', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='repository.person'),
        ),
        migrations.CreateModel(
            name='ConstituencyBoundary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boundary_kml', models.TextField(help_text='KML file content')),
                ('constituency', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='repository.constituency')),
                ('created_on', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('area', models.CharField(default='', max_length=24)),
                ('boundary_length', models.CharField(default='', max_length=24)),
                ('center_latitude', models.CharField(default='', max_length=24)),
                ('center_longitude', models.CharField(default='', max_length=24)),
            ],
            options={
                'verbose_name_plural': 'Constituency Boundaries',
            },
        ),
        migrations.AlterField(
            model_name='person',
            name='family_name',
            field=models.CharField(blank=True, help_text='Last name', max_length=72, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='given_name',
            field=models.CharField(blank=True, help_text='First name', max_length=72, null=True),
        ),
        migrations.DeleteModel(
            name='Mp',
        ),
        migrations.AddField(
            model_name='webaddress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='subjectofinterest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.subjectofinterestcategory'),
        ),
        migrations.AddField(
            model_name='subjectofinterest',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='physicaladdress',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='partyassociation',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parties', to='repository.person'),
        ),
        migrations.AddField(
            model_name='parliamentarypostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='parliamentarypostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.parliamentarypost'),
        ),
        migrations.AddField(
            model_name='oppositionpostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='oppositionpostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.oppositionpost'),
        ),
        migrations.AddField(
            model_name='maidenspeech',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='housemembership',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='governmentpostmember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='governmentpostmember',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.governmentpost'),
        ),
        migrations.AddField(
            model_name='experience',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.experiencecategory'),
        ),
        migrations.AddField(
            model_name='experience',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='election',
            name='election_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.electiontype'),
        ),
        migrations.AddField(
            model_name='declaredinterest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.declaredinterestcategory'),
        ),
        migrations.AddField(
            model_name='declaredinterest',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='constituency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.constituency'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.election'),
        ),
        migrations.AddField(
            model_name='contestedelection',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='constituency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.constituency'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='election',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.election'),
        ),
        migrations.AddField(
            model_name='constituencyresult',
            name='mp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='committeemember',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person'),
        ),
        migrations.AddField(
            model_name='committeechair',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.committeemember'),
        ),
        migrations.AddField(
            model_name='person',
            name='country_of_birth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.country'),
        ),
        migrations.AddField(
            model_name='person',
            name='house',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.house'),
        ),
        migrations.AddField(
            model_name='person',
            name='town_of_birth',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.town'),
        ),
        migrations.AlterUniqueTogether(
            name='partyassociation',
            unique_together={('start', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='housemembership',
            unique_together={('start', 'house', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='constituencyresult',
            unique_together={('election', 'constituency'), ('election', 'mp')},
        ),
        # migrations.DeleteModel(
        #     name='Links',
        # ),
        # migrations.DeleteModel(
        #     name='WebLink',
        # ),
        migrations.AlterField(
            model_name='declaredinterest',
            name='description',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='election',
            name='name',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='experience',
            name='title',
            field=models.CharField(max_length=128),
        ),
        migrations.AlterField(
            model_name='maidenspeech',
            name='hansard',
            field=models.CharField(blank=True, help_text='Hansard ID', max_length=32, null=True),
        ),
        migrations.AlterField(
            model_name='maidenspeech',
            name='subject',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='declaredinterest',
            name='description',
            field=models.CharField(max_length=1024),
        ),
        migrations.AlterField(
            model_name='election',
            name='name',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterField(
            model_name='experience',
            name='organisation',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='experience',
            name='title',
            field=models.CharField(max_length=512),
        ),
        migrations.AlterField(
            model_name='maidenspeech',
            name='subject',
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='additional_name',
            field=models.CharField(blank=True, help_text='Middle name(s)', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='family_name',
            field=models.CharField(blank=True, help_text='Last name', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='given_name',
            field=models.CharField(blank=True, help_text='First name', max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='person',
            name='name',
            field=models.CharField(help_text='Canonical name for this person.', max_length=128),
        ),
        migrations.AlterField(
            model_name='physicaladdress',
            name='address',
            field=models.CharField(max_length=512),
        ),
        migrations.AlterField(
            model_name='physicaladdress',
            name='description',
            field=models.CharField(help_text='What kind of address is this? e.g Parliamentary, Constituency...', max_length=128),
        ),
        migrations.AlterField(
            model_name='subjectofinterest',
            name='subject',
            field=models.CharField(max_length=512),
        ),
        migrations.AlterField(
            model_name='webaddress',
            name='description',
            field=models.CharField(help_text='What kind of address is this? e.g Twitter, personal site...', max_length=128),
        ),
        migrations.AlterField(
            model_name='experience',
            name='organisation',
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        # migrations.RemoveField(
        #     model_name='constituency',
        #     name='id',
        # ),
        # migrations.RemoveField(
        #     model_name='declaredinterest',
        #     name='id',
        # ),
        # migrations.RemoveField(
        #     model_name='election',
        #     name='id',
        # ),
        # migrations.RemoveField(
        #     model_name='person',
        #     name='id',
        # ),
        # migrations.AlterField(
        #     model_name='constituency',
        #     name='parliamentdotuk',
        #     field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True),
        # ),
        # migrations.AlterField(
        #     model_name='declaredinterest',
        #     name='parliamentdotuk',
        #     field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True),
        # ),
        # migrations.AlterField(
        #     model_name='election',
        #     name='parliamentdotuk',
        #     field=models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True),
        # ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('act_name', models.CharField(blank=True, max_length=512, null=True)),
                ('label', models.CharField(max_length=512)),
                ('homepage', models.URLField()),
                ('date', models.DateField()),
                ('ballot_number', models.PositiveIntegerField(default=0)),
                ('bill_chapter', models.CharField(blank=True, max_length=64, null=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_money_bill', models.BooleanField(default=False)),
                ('public_involvement_allowed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillStage',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.bill')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillStageType',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('description', models.CharField(max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommonsDivision',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('date', models.DateField()),
                ('division_number', models.PositiveSmallIntegerField()),
                ('uin', models.CharField(max_length=64)),
                ('ayes', models.PositiveSmallIntegerField(help_text='How many members voted for the motion')),
                ('noes', models.PositiveSmallIntegerField(help_text='How many members voted against the motion')),
                ('deferred_vote', models.BooleanField(default=False, help_text="A deferred vote is one that is not held immediately at the end of the debate, but at a later 'convenient' time")),
                ('abstentions', models.PositiveSmallIntegerField(help_text='How many members abstained from voting')),
                ('did_not_vote', models.PositiveSmallIntegerField()),
                ('errors', models.PositiveSmallIntegerField(help_text='How many votes were found to be recorded in error')),
                ('non_eligible', models.PositiveSmallIntegerField(help_text='How many members were ineligible to vote in this division')),
                ('suspended_or_expelled', models.PositiveSmallIntegerField(help_text='How many members were unable to vote due to suspension or expulsion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LordsDivision',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('date', models.DateField()),
                ('division_number', models.PositiveSmallIntegerField()),
                ('uin', models.CharField(max_length=64)),
                ('ayes', models.PositiveSmallIntegerField(help_text='How many members voted for the motion')),
                ('noes', models.PositiveSmallIntegerField(help_text='How many members voted against the motion')),
                ('description', models.CharField(max_length=1024)),
                ('whipped_vote', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParliamentarySession',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=24)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='physicaladdress',
            options={'verbose_name_plural': 'Physical addresses'},
        ),
        migrations.AlterModelOptions(
            name='subjectofinterest',
            options={'verbose_name_plural': 'Subjects of interest'},
        ),
        migrations.CreateModel(
            name='UnlinkedConstituency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.election')),
                ('mp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Unlinked constituencies',
            },
        ),
        migrations.AlterModelOptions(
            name='webaddress',
            options={'verbose_name_plural': 'Web addresses'},
        ),
        migrations.AddField(
            model_name='person',
            name='wikipedia',
            field=models.CharField(blank=True, help_text="Path section of a wikipedia url (e.g. 'John_Baron_(politician)')", max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='committeechair',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='committeemember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='constituencyresult',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='experience',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='governmentpostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='housemembership',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='oppositionpostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='parliamentarypostmember',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='partyassociation',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='PersonAlsoKnownAs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('alias', models.CharField(max_length=128)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'verbose_name': 'PersonAlsoKnownAs',
                'verbose_name_plural': 'People also known as',
            },
        ),
        migrations.CreateModel(
            name='LordsDivisionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('aye', models.BooleanField(default=False)),
                ('no', models.BooleanField(default=False)),
                ('abstention', models.BooleanField(default=False)),
                ('did_not_vote', models.BooleanField(default=False)),
                ('suspended_or_expelled', models.BooleanField(default=False)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='repository.lordsdivision')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='lordsdivision',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.parliamentarysession'),
        ),
        migrations.CreateModel(
            name='CommonsDivisionVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('aye', models.BooleanField(default=False)),
                ('no', models.BooleanField(default=False)),
                ('abstention', models.BooleanField(default=False)),
                ('did_not_vote', models.BooleanField(default=False)),
                ('suspended_or_expelled', models.BooleanField(default=False)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='repository.commonsdivision')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='commonsdivision',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.parliamentarysession'),
        ),
        migrations.CreateModel(
            name='BillStageSitting',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('formal', models.BooleanField()),
                ('provisional', models.BooleanField()),
                ('bill_stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='repository.billstage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='billstage',
            name='bill_stage_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.billstagetype'),
        ),
        migrations.AddField(
            model_name='billstage',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='repository.parliamentarysession'),
        ),
        migrations.CreateModel(
            name='BillPublication',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=512)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.bill')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bill',
            name='bill_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.billtype'),
        ),
        migrations.AddField(
            model_name='bill',
            name='session',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='repository.parliamentarysession'),
        ),
        migrations.CreateModel(
            name='BillSponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Raw name of the person if a Person instance cannot be found.', max_length=128, null=True)),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.bill')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'unique_together': {('person', 'bill')},
            },
        ),
        migrations.AlterField(
            model_name='bill',
            name='description',
            field=models.CharField(blank=True, max_length=2048, null=True),
        ),
        migrations.CreateModel(
            name='PartyAlsoKnownAs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('alias', models.OneToOneField(help_text='An alternative instance, probably with a differently formatted name', on_delete=django.db.models.deletion.CASCADE, related_name='alias', to='repository.party')),
                ('canonical', models.ForeignKey(help_text='Preferred party instance', on_delete=django.db.models.deletion.CASCADE, related_name='canonical', to='repository.party')),
            ],
            options={
                'verbose_name': 'PartyAlsoKnownAs',
                'verbose_name_plural': 'Parties also known as',
            },
        ),
        migrations.CreateModel(
            name='MemberPortrait',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('year_taken', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('fullsize_url', models.URLField(blank=True, null=True)),
                ('square_url', models.URLField(blank=True, null=True)),
                ('wide_url', models.URLField(blank=True, null=True)),
                ('tall_url', models.URLField(blank=True, null=True)),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Member Portrait',
                'verbose_name_plural': 'Member Portraits',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='current_post',
            field=models.CharField(blank=True, default=None, max_length=512, null=True),
        ),
        migrations.AlterField(
            model_name='constituencyboundary',
            name='constituency',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='repository.constituency'),
        ),
        migrations.CreateModel(
            name='ConstituencyAlsoKnownAs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='repository.constituency')),
                ('canonical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='repository.constituency')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Constituency AKAs',
            },
        ),
        migrations.AlterField(
            model_name='election',
            name='date',
            field=models.DateField(blank=True, default=None, null=True),
        ),
        migrations.CreateModel(
            name='ConstituencyResultDetail',
            fields=[
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('parliamentdotuk', models.PositiveIntegerField(help_text='ID used on parliament.uk website', primary_key=True, serialize=False, unique=True)),
                ('electorate', models.PositiveIntegerField(default=0)),
                ('majority', models.PositiveIntegerField(default=0)),
                ('turnout', models.PositiveIntegerField(default=0)),
                ('turnout_fraction', models.DecimalField(decimal_places=3, max_digits=3)),
                ('result', models.CharField(max_length=32)),
                ('constituency_result', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_detail', to='repository.constituencyresult')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='bill',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='billstage',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='committeechair',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='committeemember',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='commonsdivision',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='constituencyboundary',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.CreateModel(
            name='ConstituencyCandidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128)),
                ('votes', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveSmallIntegerField(default=100)),
                ('party', models.CharField(max_length=128)),
                ('election_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='repository.constituencyresultdetail')),
            ],
            options={
                'unique_together': {('election_result', 'name')},
            },
        ),
        migrations.AlterField(
            model_name='constituencyresult',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='contestedelection',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='declaredinterest',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='election',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='experience',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='governmentpostmember',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='housemembership',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='lordsdivision',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='maidenspeech',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='oppositionpostmember',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='parliamentarypostmember',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='partyassociation',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='physicaladdress',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='subjectofinterest',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='webaddress',
            name='created_on',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddConstraint(
            model_name='unlinkedconstituency',
            constraint=models.UniqueConstraint(fields=('name', 'mp', 'election'), name='unique_election_result'),
        ),
        migrations.RemoveConstraint(
            model_name='unlinkedconstituency',
            name='unique_election_result',
        ),
        migrations.RenameField(
            model_name='unlinkedconstituency',
            old_name='mp',
            new_name='person',
        ),
        migrations.AddField(
            model_name='unlinkedconstituency',
            name='end',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='unlinkedconstituency',
            name='person_won',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='unlinkedconstituency',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='personalsoknownas',
            name='alias',
            field=models.CharField(max_length=128, unique=True),
        ),
        migrations.AlterUniqueTogether(
            name='constituencyresult',
            unique_together=set(),
        ),
        migrations.AddConstraint(
            model_name='constituencyresult',
            constraint=models.UniqueConstraint(fields=('election', 'constituency', 'mp'), name='unique_constituency_result'),
        ),
        migrations.AddConstraint(
            model_name='unlinkedconstituency',
            constraint=models.UniqueConstraint(fields=('name', 'person', 'election'), name='unique_election_result'),
        ),
        migrations.AlterField(
            model_name='declaredinterest',
            name='description',
            field=models.TextField(),
        ),
        migrations.RemoveField(
            model_name='constituencyalsoknownas',
            name='alias',
        ),
        migrations.AddField(
            model_name='constituencyalsoknownas',
            name='end',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='constituencyalsoknownas',
            name='name',
            field=models.CharField(default='', max_length=64),
        ),
        migrations.AddField(
            model_name='constituencyalsoknownas',
            name='start',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='LordsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(default=util.time.get_now)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LifeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('title', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repository.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='lords_type',
            field=models.ForeignKey(blank=True, default=None, help_text="The source of this person's lordship, if applicable (e.g. hereditary, bishop, peerage, etc)", null=True, on_delete=django.db.models.deletion.SET_NULL, to='repository.lordstype'),
        ),
        migrations.AlterField(
            model_name='bill',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billpublication',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billsponsor',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billstage',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billstagesitting',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billstagetype',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='billtype',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='committee',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='committeechair',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='committeemember',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='commonsdivision',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='commonsdivisionvote',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituency',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituencyalsoknownas',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituencyboundary',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituencycandidate',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituencyresult',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='constituencyresultdetail',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='contestedelection',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='country',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='declaredinterest',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='declaredinterestcategory',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='election',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='electionnationalresult',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='electiontype',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='experience',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='experiencecategory',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='governmentpost',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='governmentpostmember',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='house',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='housemembership',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='lordsdivision',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='lordsdivisionvote',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='maidenspeech',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='memberportrait',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='oppositionpost',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='oppositionpostmember',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='parliamentarypost',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='parliamentarypostmember',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='parliamentarysession',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='party',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='partyalsoknownas',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='partyassociation',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='partytheme',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='person',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='personalsoknownas',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='physicaladdress',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='subjectofinterest',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='subjectofinterestcategory',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='town',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='unlinkedconstituency',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
        migrations.AlterField(
            model_name='webaddress',
            name='created_on',
            field=models.DateTimeField(default=util.time.get_now),
        ),
    ]
